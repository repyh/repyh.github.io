{"version":3,"sources":["components/Calculator.tsx","components/Body.tsx","index.tsx"],"names":["Calculator","useState","calculateString","setCalculateString","buttons","content","type","span","action","eval","replace","executeButton","button","className","map","classToAdd","onClick","Body","ReactDOM","render","document","getElementById"],"mappings":"8sBAcMA,WAA8B,SAA9BA,aAAqC,IAAD,UACQC,oDAAiB,IADzB,4NAC/BC,gBAD+B,cACdC,mBADc,cAGhCC,QAAyB,CAC3B,CACIC,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,EACNC,KAAM,GAEV,CACIF,QAAS,IACTC,KAAM,EACNC,KAAM,GAEV,CACIF,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,GAEV,CACID,QAAS,IACTC,KAAM,EACNC,KAAM,EACNC,OAAQ,kBACJL,mBAAmBM,KAAKP,gBAAgBQ,QAAQ,MAAO,UAG/D,CACIL,QAAS,IACTC,KAAM,EACNC,KAAM,EACNC,OAAQ,WACJL,mBAAmB,OAK/B,SAASQ,cAAcC,GAChBA,EAAOJ,OACNI,EAAOJ,SAEPL,mBAAmBD,gBAAkBU,EAAOP,SAIpD,OACI,mEAAKQ,UAAU,wBAAf,UACI,kEAAKA,UAAU,oHAAf,SACKX,kBAEJE,QAAQU,KAAI,SAAAF,GACT,IAAMG,EAAU,yHAAqHH,EAAOL,KAAP,mBAA0BK,EAAOL,MAAS,IAC/K,OACI,qEAAQM,UAAWE,EAAYC,QAAS,kBAAML,cAAcC,IAA5D,SACI,iEAAIC,UAAU,qBAAd,SACKD,EAAOP,mBASrBL,kC,mICtHAiB,EARe,WAC5B,OACE,qBAAKJ,UAAU,iEAAf,SACE,cAACb,EAAA,EAAD,OCJNkB,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.b78a4692.chunk.js","sourcesContent":["import { exec } from 'child_process';\r\nimport React, { useState } from 'react';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface Button {\r\n    content: string,\r\n    type: 0 | 1,\r\n    span?: number,\r\n    action?: () => void\r\n}\r\n\r\nconst Calculator: React.FC<Props> = () => {\r\n    const [calculateString, setCalculateString] = useState<string>('');\r\n\r\n    const buttons: Array<Button> = [\r\n        {\r\n            content: '+',\r\n            type: 1,\r\n        },\r\n        {\r\n            content: '-',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '*',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '/',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '1',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '2',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '3',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '4',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '5',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '6',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '7',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '8',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '9',\r\n            type: 1,\r\n            span: 1\r\n        },\r\n        {\r\n            content: '0',\r\n            type: 1,\r\n            span: 2\r\n        },\r\n        {\r\n            content: '(',\r\n            type: 1\r\n        },\r\n        {\r\n            content: ')',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '^',\r\n            type: 1\r\n        },\r\n        {\r\n            content: '=',\r\n            type: 0,\r\n            span: 2,\r\n            action: () => {\r\n                setCalculateString(eval(calculateString.replace(/\\^/g, '**')))\r\n            }\r\n        },\r\n        {\r\n            content: 'C',\r\n            type: 0,\r\n            span: 1,\r\n            action: () => {\r\n                setCalculateString('');\r\n            }\r\n        }\r\n    ];\r\n\r\n    function executeButton(button: Button) {\r\n        if(button.action) {\r\n            button.action();\r\n        }else{\r\n            setCalculateString(calculateString + button.content)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-3 w-56\">\r\n            <div className=\"h-20 col-span-3 bg-gray-300 rounded-md mx-1 my-1 flex justify-center items-center font-bold text-xl text-gray-700\">\r\n                {calculateString}\r\n            </div>\r\n            {buttons.map(button => {\r\n                const classToAdd = `rounded-md mx-1 hover:bg-gray-600 transition bg-gray-700 h-14 my-1 flex items-center justify-center text-white ${button.span ? `col-span-${button.span}` : ''}`;\r\n                return (\r\n                    <button className={classToAdd} onClick={() => executeButton(button)}>\r\n                        <h3 className=\"text-2xl font-bold\">\r\n                            {button.content}\r\n                        </h3>\r\n                    </button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","import React from 'react';\r\nimport Calculator from './Calculator';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Body: React.FC<Props> = () => {\r\n  return (\r\n    <div className=\"w-screen h-screen bg-gray-100 flex justify-center items-center\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './build.css';\nimport Body from './components/Body';\n\nReactDOM.render(<Body />, document.getElementById('root'));"],"sourceRoot":""}